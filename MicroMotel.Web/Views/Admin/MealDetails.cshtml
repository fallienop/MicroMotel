
@{
    ViewData["Title"] = "MealDetails";
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}


@model MicroMotel.Web.Models.Motel.Meal.MealViewModel

<div class="container">
    <div class="title-and-button-container">

        <a class="btn btn-outline-behance btn-sm mr-2" style="float: left" href="/admin/PropertyWithMeals/@Model.PropertyId">←</a>
        <h3 class="mb-0">Meal Details</h3>

    </div>
   
    <div class="Meal-details">
        <div class="Meal-info">
            <div class="Meal-label">Meal ID:</div>
            <div class="Meal-value">@Model.Id</div>
        </div>
        <div class="Meal-info">
            <div class="Meal-label">Prop ID:</div>
            <div class="Meal-value">@Model.PropertyId</div>
        </div>
        <div class="Meal-info">
            <div class="Meal-label">Meal Name:</div>
            <div class="Meal-value">@Model.Name</div>
        </div>
        <div class="Meal-info">
            <div class="Meal-label">Price:</div>
            <div class="Meal-value">@Model.Price</div>
        </div>
        <div class="Meal-info">
            <div class="Meal-label">Preparation Time:</div>
            <div class="Meal-value">@Model.PrepTime</div>
        </div>

        <div class="Meal-info">
            <div class="Meal-label">Description:</div>
            <div class="Meal-value">
                <textarea class="form-control" rows="5" readonly>@Model.Description</textarea>
            </div>
        </div>
      
   

        <a href="/Admin/UpdateMeal/@Model.Id" class="btn btn-warning">Update</a>
        <button class="btn btn-danger" id="deleteButton">Delete</button>

        <script>
            document.getElementById("deleteButton").addEventListener("click", function () {


                fetch("/Admin/DeleteMeal?id=@Model.Id", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json"
                    }
                })

                    .then(response => {
                        if (response.ok) {
                            history.go(-2);
                        } else {
                            console.error("Bir hata oluştu: ", response);
                        }
                    })
                    .catch(error => {
                        console.error("Bir hata oluştu: ", error);
                    });

            });
        </script>

    
    </div>
</div>
<script>
    function deleteMeal() {
       
        history.go(-1);
        return false;
    }
</script>
<style>
    .title-and-button-container h3 {
        margin-right: 20px; /* İstenilen boşluğu ayarlayın */
    }

    .title-and-button-container .btn {
        width: 40px;
        padding: 6px 7px;
        margin-left: 10px; /*  Bu satırı kaldırın veya düşürün */
    }
    .Meal-details {
        border: 1px solid #ddd;
        padding: 20px;
        margin: 20px 0;
    }

    .buttons-container {
        display: grid;
        grid-template-columns: repeat(2, auto); /* 2 sütun oluşturun */
        gap: 20px; /* İstenilen boşluğu ayarlayın */
        margin-top: 20px;
    }

    .btn {
        width: 300px;
        padding: 8px 10px;
        text-align: center;
        margin-left: 60px; /* Add a little margin to the left */
    }

    .Meal-info {
        display: flex;
        margin-bottom: 10px;
    }

    .Meal-label {
        width: 120px;
        font-weight: bold;
    }

    .Meal-value {
        flex: 1;
    }
</style>