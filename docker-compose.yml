version: "3.8"
services:
  moteldb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    container_name: moteldb
    volumes:
      - moteldb_volume:/var/opt/mssql
    environment:
      SA_PASSWORD: "1_Parola7"
      ACCEPT_EULA: "Y"
    ports:
      - "1440:1433"
  reservationdb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    container_name: reservationdb
    volumes:
      - reservationdb_volume:/var/opt/mssql
    environment:
      SA_PASSWORD: "1_Parola7"
      ACCEPT_EULA: "Y"
    ports:
      - "1441:1433"
  fakepaymentdb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    container_name: fakepaymentdb
    volumes:
      - fakepaymentdb_volume:/var/opt/mssql
    environment:
      SA_PASSWORD: "1_Parola7"
      ACCEPT_EULA: "Y"
    ports:
      - "1442:1433"
  identitydb:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    container_name: identitydb
    volumes:
      - identitydb_volume:/var/opt/mssql
    environment:
      SA_PASSWORD: "1_Parola7"
      ACCEPT_EULA: "Y"
    ports:
      - "1443:1433"
  motel.api:
    container_name: motel.api
    restart: on-failure
    image: motel_api_image
    build: 
     context: .
     dockerfile: Services/Motel/MicroMotel.Motel/Dockerfile
    ports: 
      - "5010:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerUrl=http://identityserver.api
      - "ConnectionStrings__SqlServerOrder=Server=moteldb;Database=Motel;User=sa;Password=1_Parola7;TrustServerCertificate=true"
    depends_on:
      - moteldb
  identityserver.api:
    container_name: identityserver.api
    restart: on-failure
    image: identityserver_api_image
    build: 
     context: .
     dockerfile: IdentityServer/MicroMotel.IdentityServer/Dockerfile
    ports: 
      - "5001:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings__SqlServerIdentity=Server=identitydb;Database=identitydb;User=sa;Password=1_Parola7;TrustServerCertificate=true"
    depends_on:
      - identitydb
  reservation.api:
    container_name: reservation.api
    restart: on-failure
    image: reservation_api_image
    build: 
     context: .
     dockerfile: Services/Reservation/MicroMotel.Services.Reservation/Dockerfile
    ports: 
      - "5013:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerUrl=http://identityserver.api
      - "ConnectionStrings__SqlServerOrder=Server=reservationdb;Database=Reservation;User=sa;Password=1_Parola7;TrustServerCertificate=true"
    depends_on:
      - reservationdb
  fakepayment.api:
    container_name: fakepayment.api
    restart: on-failure
    image: fakepayment_api_image
    build: 
     context: .
     dockerfile: Services/FakePayment/MicroMotel.Services.FakePayment/Dockerfile
    ports: 
      - "5012:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerUrl=http://identityserver.api
      - "ConnectionStrings__SqlServer=Server=fakepaymentdb;Database=Card;User=sa;Password=1_Parola7;TrustServerCertificate=true"
    depends_on:
      - fakepaymentdb
  photostock.api:
    container_name: photostock.api
    image: photostock_api_image
    build:
     context: .
     dockerfile: Services/PhotoStock/MicroMotel.Services.PhotoStock/Dockerfile
    ports:
      - "5011:80"
    volumes:
     - type: bind
       source: C:\Users\sahin\source\repos\MicroMotel\PhotoContainer
       target: /app/wwwroot/Photos
      
      # - ./wwwroot/Photos:/app/wwwroot/Photos
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - IdentityServerUrl=http://identityserver.api
  gateway.api:
    container_name: gateway.api
    image: gateway_api_image
    build:
     context: .
     dockerfile: Gateway/MicroMotel.Gateway/Dockerfile
    ports:
      - "5000:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - IdentityServer=http://identityserver.api
  frontend.web:
    container_name: frontend.web
    image: frontend_web_image
    build:
     context: .
     dockerfile: MicroMotel.Web/Dockerfile
    ports:
      - "5002:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ServiceURLs__IdentityServerURL=http://identityserver.api
      - ServiceURLs__GatewayURL=http://gateway.api
      - ServiceURLs__PhotoStockURL=http://photostock.api
      
    depends_on:
      - gateway.api
      - identityserver.api
      - motel.api
      - fakepayment.api
      - photostock.api
      - reservation.api


    
 

volumes:
  moteldb_volume: 
  reservationdb_volume: 
  fakepaymentdb_volume: 
  identitydb_volume: 

  
  
